name: CI Symfony CloudTasks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  symfony:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: cloudtasks_db
          POSTGRES_USER: app
          POSTGRES_PASSWORD: password
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "pgsql://app:password@localhost:5432/cloudtasks_db"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: intl, pdo_pgsql
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          cd app
          composer install --no-progress --no-interaction

      - name: Drop and Create Database
        run: |
          cd app
          php bin/console doctrine:database:drop --force || true
          php bin/console doctrine:database:create

      - name: Run Doctrine migrations
        run: |
          cd app
          php bin/console doctrine:migrations:migrate --no-interaction

      - name: Run PHPUnit tests
        run: |
          cd app
          php bin/phpunit

      - name: Define image tag
        run: echo "IMAGE_TAG=cloudtasks-app:$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Verify Dockerfile presence
        run: |
          test -f docker/php/Dockerfile || (echo "Dockerfile not found!" && exit 1)

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -f docker/php/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG
